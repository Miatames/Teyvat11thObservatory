<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

<!-- 扫描包： -->
<context:component-scan base-package="pers.genshintool" >
 <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
</context:component-scan>

<!-- 配置数据源：spring-->
<!-- ======================1.数据源，事务================================== -->
<context:property-placeholder location="classpath:db.properties"/>
<!-- 配置数据源参数 -->
<bean id="pooledDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
   <property name="driverClass" value="${jdbc.driver}"></property>
   <property name="jdbcUrl" value="${jdbc.url}"></property>
   <property name="user" value="${jdbc.username}"></property>
   <property name="password" value="${jdbc.password}"></property>
</bean>
<!-- 与myBatis的整合 :创建SqlSessionFactory:mybatis的全局配置文-->
<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
  <property name="configLocation" value="classpath:mybatis-config.xml"/>
  <property name="dataSource" ref="pooledDataSource"></property>
  <!-- 指定mapper位置 -->
  <property name="mapperLocations" value="classpath:mapper/*.xml"></property>
</bean>
<!-- 配置扫描器，将mybatis接口中的实现加入到ioc容器中 -->
<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
<!-- 扫描所有dao接口的实现,加入到ioc容器中 -->
   <property name="basePackage" value="pers.genshintool.dao"></property>
</bean>

<!-- 配置批量sqlSession -->
<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"></constructor-arg>
<constructor-arg name="executorType" value="BATCH"></constructor-arg>
</bean>

<!-- 事务控制配置 -->
<bean id="transcationManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
   <property name="dataSource" ref="pooledDataSource"></property>
</bean>

<!-- 开启基于注解的事务 -->
<aop:config>
<aop:pointcut expression="execution(* pers.genshintool.service..*(..))"  id="txPoint"/>
<!-- 配置事务增强 -->
<aop:advisor advice-ref="txActive" pointcut-ref="txPoint"/>
</aop:config>

<tx:advice id="txActive" transaction-manager="transcationManager">
<tx:attributes>
  <tx:method name="*"/>
  <tx:method name="get*" read-only="true"/>
</tx:attributes>
</tx:advice>

</beans>
